import java.awt.*;
import java.awt.event.*;

public class Desenhar extends Frame {
    
   public static void main(String[] args){
        quadro[] q = new quadro[16];
        q[0] = new quadro (61,71,2);
        q[1] = new quadro (200,200,2);
        q[2] = new quadro (350,350,4);
        new janela(q,3).show();
    }
    
}



public class janela extends Frame  implements KeyListener{
    quadro[] q = new quadro[16];
    int num;
    public janela(quadro q[],int num) {
        this.num = num;
        setSize(500,500);
        setTitle("mecher setinhas");
        for (int i=0; i<this.num;i++)
        this.q[i] = q[i];
        addKeyListener(this);
        addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent we){
                System.exit(0);
            }
        });
    }
    
    public void paint(Graphics g){
        
        g.drawRect(40, 50, 400, 400);
        for(int i=0;i<this.q.length;i++){
            g.setColor(Color.CYAN);
            try{
            g.fillRect(this.q[i].x,this.q[i].y,80,80);
            g.setColor(Color.BLACK);
            g.drawString("" + this.q[i].valor, this.q[i].x+40, this.q[i].y +40);
            }
            catch(Exception e){}
        }
        
        
    }
    
    public void keyPressed(KeyEvent ke){
        
        int keyCode = ke.getKeyCode();
        
        switch(keyCode){
        
            case KeyEvent.VK_UP:
                for(int i = 0;i<this.num;i++)
                    this.q[i].slide(0, q,this.num);
                for(int i = 0;i<this.num;i++)
                    this.q[i].slide(0, q,this.num);
                
                
                
                break;
            case KeyEvent.VK_LEFT:
                for(int i = 0; i<this.num;i++)
                    this.q[i].slide(1, q,this.num);
                for(int i = 0; i<this.num;i++)
                    this.q[i].slide(1, q,this.num);
                
                 
                
                break;
            case KeyEvent.VK_RIGHT:
                for(int i=0;i<this.num;i++)
                    this.q[i].slide(2, q,this.num);
                for(int i=0;i<this.num;i++)
                    this.q[i].slide(2, q,this.num);
                
                break;
            case KeyEvent.VK_DOWN:
                for(int i=0;i<this.num;i++)
                    this.q[i].slide(3, q,this.num);
                for(int i=0;i<this.num;i++)
                    this.q[i].slide(3, q,this.num);
                
                
                break;
             
        }
        repaint();
        
    }
      public void keyTyped(KeyEvent ke){
        
    }
    public void keyReleased(KeyEvent ke){
        
    }
    
    
}

public class quadro extends Tile {
    int x,y,valor;
    String Color;

    public quadro(int x, int y,int valor) {
        this.x = x;
        this.y = y;
        this.valor=valor;
    }
    
    public boolean collision(quadro[] q,int k, int num){
        for(int i=0;i<num;i++){
            switch (k){
                case 0:
                    if(this.y == q[i].y +100 && this.x == q[i].x)
                        return true;
                    break;
                case 1:
                    if(this.x == q[i].x +100 && this.y == q[i].y)
                        return true;
                    break;
                case 2:
                    if(this.x+100 == q[i].x && this.y == q[i].y)
                        return true;
                    break;
                case 3:
                    if(this.y+100 == q[i].y && this.x == q[i].x)
                        return true;
                    break;
            
            }
        }
        
        return false;
                     
    }
    public void slide(int x,quadro[] q,int num){
        switch(x){
            case 0:
                while(this.y>71 && !this.collision(q,0,num)){this.y = this.y - 1;}
                
                break;
            case 1:
                while(this.x>61 && !this.collision(q,1,num)){this.x = this.x - 1;}
                
                break;
            case 2:
                while(this.x<340&& !this.collision(q,2,num)){this.x = this.x + 1;}
                
                break;
            case 3:
                while(this.y<350 && !this.collision(q,3,num)){this.y = this.y + 1;}
                
                break;
                
        }
    }
}

public abstract class Tile {
    int x,y,valor;
    String Color;
    abstract boolean collision(quadro[] q, int k, int num);
    abstract void slide(int x,quadro[]q,int num);
    
    
}
